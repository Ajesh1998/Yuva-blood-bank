name: Laravel Blood Bank CI/CD

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, dom, fileinfo, sqlite3, zip, pcntl
        coverage: none
    
    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    
    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Validate Composer
      run: composer validate --strict
    
    - name: Install Dependencies (Production)
      run: |
        # Remove lock file and install fresh production dependencies
        rm -f composer.lock
        composer install --no-dev --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader
    
    - name: Discover Packages
      run: php artisan package:discover --ansi
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    
    - name: Cache Configuration
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
    
    - name: Test Application Loads
      run: |
        php artisan serve --host=0.0.0.0 --port=8000 &
        sleep 5
        curl -f http://localhost:8000/ || exit 1
        pkill -f "php artisan serve"
    
    - name: Test Login Page
      run: |
        php artisan serve --host=0.0.0.0 --port=8000 &
        sleep 3
        curl -f http://localhost:8000/login || exit 1
        pkill -f "php artisan serve"
